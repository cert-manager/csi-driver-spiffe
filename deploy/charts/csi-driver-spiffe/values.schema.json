{
  "$defs": {
    "helm-values": {
      "additionalProperties": false,
      "properties": {
        "app": {
          "$ref": "#/$defs/helm-values.app"
        },
        "commonLabels": {
          "$ref": "#/$defs/helm-values.commonLabels"
        },
        "global": {
          "$ref": "#/$defs/helm-values.global"
        },
        "image": {
          "$ref": "#/$defs/helm-values.image"
        },
        "imagePullSecrets": {
          "$ref": "#/$defs/helm-values.imagePullSecrets"
        },
        "priorityClassName": {
          "$ref": "#/$defs/helm-values.priorityClassName"
        }
      },
      "type": "object"
    },
    "helm-values.app": {
      "additionalProperties": false,
      "properties": {
        "certificateRequestDuration": {
          "$ref": "#/$defs/helm-values.app.certificateRequestDuration"
        },
        "driver": {
          "$ref": "#/$defs/helm-values.app.driver"
        },
        "extraCertificateRequestAnnotations": {
          "$ref": "#/$defs/helm-values.app.extraCertificateRequestAnnotations"
        },
        "issuer": {
          "$ref": "#/$defs/helm-values.app.issuer"
        },
        "logLevel": {
          "$ref": "#/$defs/helm-values.app.logLevel"
        },
        "name": {
          "$ref": "#/$defs/helm-values.app.name"
        },
        "trustDomain": {
          "$ref": "#/$defs/helm-values.app.trustDomain"
        }
      },
      "type": "object"
    },
    "helm-values.app.certificateRequestDuration": {
      "default": "1h",
      "description": "Duration requested for requested certificates.",
      "type": "string"
    },
    "helm-values.app.driver": {
      "additionalProperties": false,
      "properties": {
        "csiDataDir": {
          "$ref": "#/$defs/helm-values.app.driver.csiDataDir"
        },
        "livenessProbe": {
          "$ref": "#/$defs/helm-values.app.driver.livenessProbe"
        },
        "livenessProbeImage": {
          "$ref": "#/$defs/helm-values.app.driver.livenessProbeImage"
        },
        "nodeDriverRegistrarImage": {
          "$ref": "#/$defs/helm-values.app.driver.nodeDriverRegistrarImage"
        },
        "resources": {
          "$ref": "#/$defs/helm-values.app.driver.resources"
        },
        "sourceCABundle": {
          "$ref": "#/$defs/helm-values.app.driver.sourceCABundle"
        },
        "volumeFileName": {
          "$ref": "#/$defs/helm-values.app.driver.volumeFileName"
        },
        "volumeMounts": {
          "$ref": "#/$defs/helm-values.app.driver.volumeMounts"
        },
        "volumes": {
          "$ref": "#/$defs/helm-values.app.driver.volumes"
        }
      },
      "type": "object"
    },
    "helm-values.app.driver.csiDataDir": {
      "default": "/tmp/cert-manager-csi-driver",
      "description": "Configures the hostPath directory that the driver will write and mount volumes from.",
      "type": "string"
    },
    "helm-values.app.driver.livenessProbe": {
      "additionalProperties": false,
      "properties": {
        "port": {
          "$ref": "#/$defs/helm-values.app.driver.livenessProbe.port"
        }
      },
      "type": "object"
    },
    "helm-values.app.driver.livenessProbe.port": {
      "default": 9809,
      "description": "The port that will expose the liveness of the csi-driver",
      "type": "number"
    },
    "helm-values.app.driver.livenessProbeImage": {
      "additionalProperties": false,
      "properties": {
        "digest": {
          "$ref": "#/$defs/helm-values.app.driver.livenessProbeImage.digest"
        },
        "pullPolicy": {
          "$ref": "#/$defs/helm-values.app.driver.livenessProbeImage.pullPolicy"
        },
        "registry": {
          "$ref": "#/$defs/helm-values.app.driver.livenessProbeImage.registry"
        },
        "repository": {
          "$ref": "#/$defs/helm-values.app.driver.livenessProbeImage.repository"
        },
        "tag": {
          "$ref": "#/$defs/helm-values.app.driver.livenessProbeImage.tag"
        }
      },
      "type": "object"
    },
    "helm-values.app.driver.livenessProbeImage.digest": {
      "description": "Target image digest. Override any tag, if set.\nFor example:\ndigest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20",
      "type": "string"
    },
    "helm-values.app.driver.livenessProbeImage.pullPolicy": {
      "default": "IfNotPresent",
      "description": "Kubernetes imagePullPolicy on liveness probe.",
      "type": "string"
    },
    "helm-values.app.driver.livenessProbeImage.registry": {
      "description": "Target image registry. This value is prepended to the target image repository, if set.\nFor example:\nregistry: registry.k8s.io\nrepository: sig-storage/livenessprobe",
      "type": "string"
    },
    "helm-values.app.driver.livenessProbeImage.repository": {
      "default": "registry.k8s.io/sig-storage/livenessprobe",
      "description": "Target image repository.",
      "type": "string"
    },
    "helm-values.app.driver.livenessProbeImage.tag": {
      "default": "v2.12.0",
      "description": "Override the image tag to deploy by setting this variable. If no value is set, the chart's appVersion is used.",
      "type": "string"
    },
    "helm-values.app.driver.nodeDriverRegistrarImage": {
      "additionalProperties": false,
      "properties": {
        "digest": {
          "$ref": "#/$defs/helm-values.app.driver.nodeDriverRegistrarImage.digest"
        },
        "pullPolicy": {
          "$ref": "#/$defs/helm-values.app.driver.nodeDriverRegistrarImage.pullPolicy"
        },
        "registry": {
          "$ref": "#/$defs/helm-values.app.driver.nodeDriverRegistrarImage.registry"
        },
        "repository": {
          "$ref": "#/$defs/helm-values.app.driver.nodeDriverRegistrarImage.repository"
        },
        "tag": {
          "$ref": "#/$defs/helm-values.app.driver.nodeDriverRegistrarImage.tag"
        }
      },
      "type": "object"
    },
    "helm-values.app.driver.nodeDriverRegistrarImage.digest": {
      "description": "Target image digest. Override any tag, if set.\nFor example:\ndigest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20",
      "type": "string"
    },
    "helm-values.app.driver.nodeDriverRegistrarImage.pullPolicy": {
      "default": "IfNotPresent",
      "description": "Kubernetes imagePullPolicy on node-driver.",
      "type": "string"
    },
    "helm-values.app.driver.nodeDriverRegistrarImage.registry": {
      "description": "Target image registry. This value is prepended to the target image repository, if set.\nFor example:\nregistry: registry.k8s.io\nrepository: sig-storage/csi-node-driver-registrar",
      "type": "string"
    },
    "helm-values.app.driver.nodeDriverRegistrarImage.repository": {
      "default": "registry.k8s.io/sig-storage/csi-node-driver-registrar",
      "description": "Target image repository.",
      "type": "string"
    },
    "helm-values.app.driver.nodeDriverRegistrarImage.tag": {
      "default": "v2.10.0",
      "description": "Override the image tag to deploy by setting this variable. If no value is set, the chart's appVersion is used.",
      "type": "string"
    },
    "helm-values.app.driver.resources": {
      "default": {},
      "description": "Kubernetes pod resource limits for cert-manager-csi-driver-spiffe\n\nFor example:\nresources:\n  limits:\n    cpu: 100m\n    memory: 128Mi\n  requests:\n    cpu: 100m\n    memory: 128Mi",
      "type": "object"
    },
    "helm-values.app.driver.sourceCABundle": {
      "description": "Optional file containing a CA bundle that will be propagated to managed volumes."
    },
    "helm-values.app.driver.volumeFileName": {
      "additionalProperties": false,
      "properties": {
        "ca": {
          "$ref": "#/$defs/helm-values.app.driver.volumeFileName.ca"
        },
        "cert": {
          "$ref": "#/$defs/helm-values.app.driver.volumeFileName.cert"
        },
        "key": {
          "$ref": "#/$defs/helm-values.app.driver.volumeFileName.key"
        }
      },
      "type": "object"
    },
    "helm-values.app.driver.volumeFileName.ca": {
      "default": "ca.crt",
      "description": "File name where the CA bundles are written to, if enabled.",
      "type": "string"
    },
    "helm-values.app.driver.volumeFileName.cert": {
      "default": "tls.crt",
      "description": "File name which signed certificates are written to in volumes.",
      "type": "string"
    },
    "helm-values.app.driver.volumeFileName.key": {
      "default": "tls.key",
      "description": "File name which private keys are written to in volumes.",
      "type": "string"
    },
    "helm-values.app.driver.volumeMounts": {
      "default": [],
      "description": "Optional extra volume mounts. Useful for mounting root CAs\n\nFor example:\nvolumeMounts:\n- name: root-cas\n  mountPath: /var/run/secrets/cert-manager-csi-driver-spiffe",
      "items": {},
      "type": "array"
    },
    "helm-values.app.driver.volumes": {
      "default": [],
      "description": "Optional extra volumes. Useful for mounting root CAs\n\nFor example:\nvolumes:\n- name: root-cas\n  secret:\n    secretName: root-ca-bundle",
      "items": {},
      "type": "array"
    },
    "helm-values.app.extraCertificateRequestAnnotations": {
      "description": "List of annotations to add to certificate requests\n\nFor example:\nextraCertificateRequestAnnotations: app=csi-driver-spiffe,foo=bar"
    },
    "helm-values.app.issuer": {
      "additionalProperties": false,
      "properties": {
        "group": {
          "$ref": "#/$defs/helm-values.app.issuer.group"
        },
        "kind": {
          "$ref": "#/$defs/helm-values.app.issuer.kind"
        },
        "name": {
          "$ref": "#/$defs/helm-values.app.issuer.name"
        }
      },
      "type": "object"
    },
    "helm-values.app.issuer.group": {
      "default": "cert-manager.io",
      "description": "Issuer group which is used to serve this Trust Domain.",
      "type": "string"
    },
    "helm-values.app.issuer.kind": {
      "default": "ClusterIssuer",
      "description": "Issuer kind which is used to serve this Trust Domain.",
      "type": "string"
    },
    "helm-values.app.issuer.name": {
      "default": "spiffe-ca",
      "description": "Issuer name which is used to serve this Trust Domain.",
      "type": "string"
    },
    "helm-values.app.logLevel": {
      "default": 1,
      "description": "Verbosity of cert-manager-csi-driver logging.",
      "type": "number"
    },
    "helm-values.app.name": {
      "default": "spiffe.csi.cert-manager.io",
      "description": "The name for the CSI driver installation.",
      "type": "string"
    },
    "helm-values.app.trustDomain": {
      "default": "cluster.local",
      "description": "The Trust Domain for this driver.",
      "type": "string"
    },
    "helm-values.commonLabels": {
      "default": {},
      "description": "Labels to apply to all resources",
      "type": "object"
    },
    "helm-values.global": {
      "description": "Global values shared across all (sub)charts"
    },
    "helm-values.image": {
      "additionalProperties": false,
      "properties": {
        "digest": {
          "$ref": "#/$defs/helm-values.image.digest"
        },
        "pullPolicy": {
          "$ref": "#/$defs/helm-values.image.pullPolicy"
        },
        "registry": {
          "$ref": "#/$defs/helm-values.image.registry"
        },
        "repository": {
          "$ref": "#/$defs/helm-values.image.repository"
        },
        "tag": {
          "$ref": "#/$defs/helm-values.image.tag"
        }
      },
      "type": "object"
    },
    "helm-values.image.digest": {
      "description": "Target image digest. Override any tag, if set.\nFor example:\ndigest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20",
      "type": "string"
    },
    "helm-values.image.pullPolicy": {
      "default": "IfNotPresent",
      "description": "Kubernetes imagePullPolicy on Deployment.",
      "type": "string"
    },
    "helm-values.image.registry": {
      "description": "Target image registry. This value is prepended to the target image repository, if set.\nFor example:\nregistry: quay.io\nrepository: jetstack/cert-manager-csi-driver-spiffe",
      "type": "string"
    },
    "helm-values.image.repository": {
      "default": "quay.io/jetstack/cert-manager-csi-driver-spiffe",
      "description": "Target image repository.",
      "type": "string"
    },
    "helm-values.image.tag": {
      "description": "Override the image tag to deploy by setting this variable. If no value is set, the chart's appVersion is used.",
      "type": "string"
    },
    "helm-values.imagePullSecrets": {
      "default": [],
      "description": "Optional secrets used for pulling the csi-driver-spiffe container image\n\nFor example:\nimagePullSecrets:\n- name: secret-name",
      "items": {},
      "type": "array"
    },
    "helm-values.priorityClassName": {
      "default": "",
      "description": "Optional priority class to be used for the csi-driver pods.",
      "type": "string"
    }
  },
  "$ref": "#/$defs/helm-values",
  "$schema": "http://json-schema.org/draft-07/schema#"
}
