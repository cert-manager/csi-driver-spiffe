image:
  # Target image registry. This value is prepended to the target image repository, if set.
  # For example:
  #   registry: quay.io
  #   repository:
  #     driver: jetstack/cert-manager-csi-driver-spiffe
  #     approver: jetstack/cert-manager-csi-driver-spiffe-approver
  # +docs:property
  # registry: quay.io

  repository:
    # Target image repository for the csi-driver driver DaemonSet.
    driver: quay.io/jetstack/cert-manager-csi-driver-spiffe
    # Target image repository for the csi-driver approver Deployment.
    approver: quay.io/jetstack/cert-manager-csi-driver-spiffe-approver

  # Override the image tag to deploy by setting this variable.
  # If no value is set, the chart's appVersion is used.
  # +docs:property
  # tag: vX.Y.Z

  digest:
    {}
    # Target csi-driver driver digest. Override any tag, if set.
    # For example:
    #   driver: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20
    # +docs:property=image.digest.driver
    # driver: sha256:...

    # Target csi-driver approver digest. Override any tag, if set.
    # For example:
    #   approver: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20
    # +docs:property=image.digest.approver
    # approver: sha256:...

  # Kubernetes imagePullPolicy on DaemonSet.
  pullPolicy: IfNotPresent

# Optional secrets used for pulling the csi-driver-spiffe and csi-driver-spiffe-approver container images
#
# For example:
#  imagePullSecrets:
#  - name: secret-name
imagePullSecrets: []

app:
  # Verbosity of cert-manager-csi-driver logging.
  logLevel: 1 # 1-5
  # Duration requested for requested certificates.
  certificateRequestDuration: 1h

  # Name of a ConfigMap in the installation namespace to watch, providing
  # runtime configuration of an issuer to use.
  #
  # The "issuer-name", "issuer-kind" and "issuer-group" keys must be present in
  # the ConfigMap for it to be used.
  runtimeIssuanceConfigMap: ""

  # List of annotations to add to certificate requests
  #
  # For example:
  #  extraCertificateRequestAnnotations: app=csi-driver-spiffe,foo=bar
  extraCertificateRequestAnnotations:
  # The Trust Domain for this driver.
  trustDomain: cluster.local
  # The name for the CSI driver installation.
  name: spiffe.csi.cert-manager.io
  issuer:
    # Issuer name which is used to serve this Trust Domain.
    name: spiffe-ca
    # Issuer kind which is used to serve this Trust Domain.
    kind: ClusterIssuer
    # Issuer group which is used to serve this Trust Domain.
    group: cert-manager.io

  # Options for CSI driver
  driver:
    # Optional file containing a CA bundle that will be propagated to
    # managed volumes.
    sourceCABundle: # /var/run/secrets/spiffe.io/ca.pem
    volumeFileName:
      # File name which signed certificates are written to in volumes.
      cert: tls.crt
      # File name which private keys are written to in volumes.
      key: tls.key
      # File name where the CA bundles are written to, if enabled.
      ca: ca.crt
    # Optional extra volumes. Useful for mounting root CAs
    #
    # For example:
    #  volumes:
    #  - name: root-cas
    #    secret:
    #      secretName: root-ca-bundle
    volumes: []
    # Optional extra volume mounts. Useful for mounting root CAs
    #
    # For example:
    #  volumeMounts:
    #  - name: root-cas
    #    mountPath: /var/run/secrets/cert-manager-csi-driver-spiffe
    volumeMounts: []

    # Configures the hostPath directory that the driver will write and mount volumes from.
    csiDataDir: /tmp/cert-manager-csi-driver

    # Kubernetes pod resource limits for cert-manager-csi-driver-spiffe
    #
    # For example:
    #  resources:
    #    limits:
    #      cpu: 100m
    #      memory: 128Mi
    #    requests:
    #      cpu: 100m
    #      memory: 128Mi
    resources: {}

    nodeDriverRegistrarImage:
      # Target image registry. This value is prepended to the target image repository, if set.
      # For example:
      #   registry: registry.k8s.io
      #   repository: sig-storage/csi-node-driver-registrar
      # +docs:property
      # registry: registry.k8s.io

      # Target image repository.
      repository: registry.k8s.io/sig-storage/csi-node-driver-registrar

      # Override the image tag to deploy by setting this variable.
      # If no value is set, the chart's appVersion is used.
      # +docs:property
      tag: v2.13.0

      # Target image digest. Override any tag, if set.
      # For example:
      #   digest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20
      # +docs:property
      # digest: sha256:...

      # Kubernetes imagePullPolicy on node-driver.
      pullPolicy: IfNotPresent

    livenessProbeImage:
      # Target image registry. This value is prepended to the target image repository, if set.
      # For example:
      #   registry: registry.k8s.io
      #   repository: sig-storage/livenessprobe
      # +docs:property
      # registry: registry.k8s.io

      # Target image repository.
      repository: registry.k8s.io/sig-storage/livenessprobe

      # Override the image tag to deploy by setting this variable.
      # If no value is set, the chart's appVersion is used.
      # +docs:property
      tag: v2.16.0

      # Target image digest. Override any tag, if set.
      # For example:
      #   digest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20
      # +docs:property
      # digest: sha256:...

      # Kubernetes imagePullPolicy on liveness probe.
      pullPolicy: IfNotPresent

    livenessProbe:
      # The port that will expose the liveness of the csi-driver
      port: 9809

  # Options for approver controller
  approver:
    # Number of replicas of the approver to run.
    replicaCount: 1

    # A signer name that the csi-driver-spiffe approver will be given
    # permission to approve and deny. CertificateRequests referencing this
    # signer name can be processed by the SPIFFE approver. See:
    # https://cert-manager.io/docs/concepts/certificaterequest/#approval
    # Defaults to empty which allows approval for all signers
    signerName: ""

    readinessProbe:
      # Container port to expose csi-driver-spiffe-approver HTTP readiness
      # probe on default network interface.
      port: 6060

    metrics:
      # Port for exposing Prometheus metrics on 0.0.0.0 on path '/metrics'.
      port: 9402
      # Service to expose metrics endpoint.
      service:
        # Create a Service resource to expose metrics endpoint.
        enabled: true
        # Service type to expose metrics.
        type: ClusterIP
        # ServiceMonitor resource for this Service.
        servicemonitor:
          # Create Prometheus ServiceMonitor resource for cert-manager-csi-driver-spiffe approver.
          enabled: false
          # The value for the "prometheus" label on the ServiceMonitor. This allows
          # for multiple Prometheus instances selecting difference ServiceMonitors
          # using label selectors.
          prometheusInstance: default
          # The interval that the Prometheus will scrape for metrics.
          interval: 10s
          # The timeout on each metric probe request.
          scrapeTimeout: 5s
          # Additional labels to give the ServiceMonitor resource.
          labels: {}
    # Kubernetes pod resource limits for cert-manager-csi-driver-spiffe approver
    #
    # For example:
    #  resources:
    #    limits:
    #      cpu: 100m
    #      memory: 128Mi
    #    requests:
    #      cpu: 100m
    #      memory: 128Mi
    resources: {}

# Optional priority class to be used for the csi-driver pods.
priorityClassName: ""

# Labels to apply to all resources
commonLabels: {}

# Kubernetes node selector: node labels for pod assignment.
# +docs:property=nodeSelector
nodeSelector:
  kubernetes.io/os: linux

# Kubernetes affinity: constraints for pod assignment.
#
# For example:
#   affinity:
#     nodeAffinity:
#      requiredDuringSchedulingIgnoredDuringExecution:
#        nodeSelectorTerms:
#        - matchExpressions:
#          - key: foo.bar.com/role
#            operator: In
#            values:
#            - master
affinity: {}

# Kubernetes pod tolerations for cert-manager-csi-driver-spiffe.
#
# For example:
#   tolerations:
#   - key: foo.bar.com/role
#     operator: Equal
#     value: master
#     effect: NoSchedule
tolerations: []

# List of Kubernetes TopologySpreadConstraints.
#
# For example:
#   topologySpreadConstraints:
#   - maxSkew: 2
#     topologyKey: topology.kubernetes.io/zone
#     whenUnsatisfiable: ScheduleAnyway
#     labelSelector:
#       matchLabels:
#         app.kubernetes.io/instance: cert-manager
#         app.kubernetes.io/component: controller
topologySpreadConstraints: []

openshift:
  securityContextConstraint: 
    # Include RBAC to allow the DaemonSet to "use" the specified
    # SecurityContextConstraints.
    #
    # This value can either be a boolean true or false, or the string "detect".
    # If set to "detect" then the securityContextConstraint is automatically 
    # enabled for openshift installs.
    #
    # +docs:type=boolean,string,null
    enabled: detect
    # Name of the SecurityContextConstraints to create RBAC for.
    name: privileged
